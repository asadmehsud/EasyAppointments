@model EasyAppointments.Services.DTOs.AdminDTOs.ClinicDTOs.GetClinicDto
<form id="FrmClinic" method="post">
    @Html.HiddenFor(a => a.Id)
    <div class="form-group">
        <label>ClinicName</label>
        @Html.TextBoxFor(a => a.ClinicName, new { @class = "form-control", placeholder = "Enter Clinic name" })
        @Html.ValidationMessageFor(a => a.ClinicName, "", new { @style = "color:red" })
    </div>
    <div class="form-group">
        <label>Province</label>
        <select class="form-control" id="ProvinceId" name="ProvinceId" onchange="getCityByProvince()">
            <option>Select Province</option>
            @foreach (var item in Model.Provinces)
            {
                if (item.Id == Model.ProvinceId)
                {
                    <option selected value="@item.Id">@item.ProvinceName</option>
                }
                else
                {
                    <option value="@item.Id">@item.ProvinceName</option>
                }
            }

        </select>
    </div>
    <div class="form-group">
        <label>City</label>
        <select class="form-control" id="CityId" name="CityId">
            <option>Select city</option>
            @if (Model.Id > 0)
            {
                <option selected value="@Model.City.Id">@Model.City.Name</option>
            }
            else
            {
                <option>Select province first</option>
            }
        </select>
    </div>
    <div class="form-group">
        <label>Address</label>
        @Html.TextBoxFor(a => a.Address, new { @class = "form-control", placeholder = "Enter Clinic location" })
        @Html.ValidationMessageFor(a => a.Address, "", new { @style = "color:red" })
    </div>
    <div class="form-group">
        <label>Status</label>
        @Html.DropDownListFor(a => a.Status, new List<SelectListItem> { new SelectListItem { Text = "Active", Value = "0" }, new SelectListItem { Text = "InActive", Value = "1" } }, "Select Status", new { @class = "form-control" })
        @Html.ValidationMessageFor(a => a.Status, "", new { @style = "color:red" })
    </div>
    <div class="form-group">
        <div>
            <button type="button" class="btn btn-primary waves-effect waves-light" onclick="showConfirmationDialog('Submittion',0)">
                Submit
            </button>
            <button type="reset" class="btn btn-secondary waves-effect m-l-5">
                Cancel
            </button>
            <hr />
            <button type="button" id="ButtonText" class="btn btn-info" onclick="getClinics()">Show List</button>
        </div>
    </div>
</form>
